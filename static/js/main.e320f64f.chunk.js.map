{"version":3,"sources":["assets/images/background.mp4","assets/images/background.webm","App.js","index.js"],"names":["App","React","useState","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","useRef","useEffect","countDownDate","Date","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","current","startTimer","className","slice","autoPlay","muted","loop","preload","type","src","BackgroundWEBM","BackgroundMP4","ReactDOM","render","document","getElementById"],"mappings":"0KAAe,MAA0B,uCCA1B,MAA0B,wC,OCmF1BA,EA/EH,WAAO,IAAD,EACkBC,IAAMC,SAAS,MADjC,mBACTC,EADS,KACEC,EADF,OAEoBH,IAAMC,SAAS,MAFnC,mBAETG,EAFS,KAEGC,EAFH,OAGwBL,IAAMC,SAAS,MAHvC,mBAGTK,EAHS,KAGKC,EAHL,OAIwBP,IAAMC,SAAS,MAJvC,mBAITO,EAJS,KAIKC,EAJL,KAMZC,EAAWV,IAAMW,SAkCrB,OAJAX,IAAMY,WAAU,YA5BG,WAEjB,IAAMC,EAAgB,IAAIC,KAAK,cAAcC,UAE7CL,EAAWM,aAAY,WAErB,IAAMC,GAAM,IAAIH,MAAOC,UACjBG,EAAWL,EAAgBI,EAG3BE,EAAOC,KAAKC,MAAMH,EAAQ,OAC1BI,EAAQF,KAAKC,MAAOH,EAAQ,MAAT,MACnBK,EAAUH,KAAKC,MAAOH,EAAQ,KAAT,KACrBM,EAAUJ,KAAKC,MAAOH,EAAQ,IAAkB,KAElDA,EAAW,EAEbO,cAAcf,EAASgB,UAGvBvB,EAAagB,GACbd,EAAciB,GACdf,EAAgBgB,GAChBd,EAAgBe,MAEjB,KAIHG,KACC,IAGD,qCACE,qBAAKC,UAAU,QAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAIA,UAAU,eAAd,+DACY,wCADZ,kFAIF,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,cAAhB,SAA+B1B,IAC/B,sBAAM0B,UAAU,cAAhB,yCAEF,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,cAAhB,UAAgC,IAAMxB,GAAYyB,OAAO,KACzD,sBAAMD,UAAU,cAAhB,+CAEF,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,cAAhB,UAAgC,IAAMtB,GAAcuB,OAAO,KAC3D,sBAAMD,UAAU,cAAhB,+CAEF,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,cAAhB,UAAgC,IAAMpB,GAAcqB,OAAO,KAC3D,sBAAMD,UAAU,cAAhB,+DAMV,wBAAOE,UAAQ,EAACC,OAAK,EAACC,MAAI,EAACC,QAAQ,OAAOL,UAAU,oBAApD,UACE,wBAAQM,KAAK,aAAaC,IAAKC,IAC/B,wBAAQF,KAAK,YAAYC,IAAKE,WCtEtCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.e320f64f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.c4a84e5e.mp4\";","export default __webpack_public_path__ + \"static/media/background.b6b4f4da.webm\";","import React from 'react';\n\nimport { BackgroundMP4, BackgroundWEBM } from './assets/images';\n\nconst App = () => {\n  const [timerDays, setTimerDays] = React.useState('--');\n  const [timerHours, setTimerHours] = React.useState('--');\n  const [timerMinutes, setTimerMinutes] = React.useState('--');\n  const [timerSeconds, setTimerSeconds] = React.useState('--');\n\n  let interval = React.useRef();\n\n  const startTimer = () => {\n    // Дата с которой нужно сделать обратный отсчет\n    const countDownDate = new Date('Jan 1 2022').getTime();\n\n    interval = setInterval(() => {\n      // Расчёт оставшегося времени\n      const now = new Date().getTime();\n      const distance = countDownDate - now;\n\n      // Подсчёт дней, часов, минут, секунд\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      if (distance < 0) {\n        // Остановить таймер если оставшиеся время меньше нуля\n        clearInterval(interval.current);\n      } else {\n        // Обновить таймер\n        setTimerDays(days);\n        setTimerHours(hours);\n        setTimerMinutes(minutes);\n        setTimerSeconds(seconds);\n      }\n    }, 1000);\n  };\n\n  React.useEffect(() => {\n    startTimer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"timer\">\n        <div className=\"timer__body\">\n          <div className=\"timer__top\">\n            <h1 className=\"timer__title\">\n              До Нового <span>2022</span> Года осталось\n            </h1>\n          </div>\n          <div className=\"timer__bottom\">\n            <div className=\"timer__bottom-wrapper\">\n              <div className=\"timer__block\">\n                <span className=\"timer__time\">{timerDays}</span>\n                <span className=\"timer__text\">Дней</span>\n              </div>\n              <div className=\"timer__block\">\n                <span className=\"timer__time\">{('0' + timerHours).slice(-2)}</span>\n                <span className=\"timer__text\">Часов</span>\n              </div>\n              <div className=\"timer__block\">\n                <span className=\"timer__time\">{('0' + timerMinutes).slice(-2)}</span>\n                <span className=\"timer__text\">Минут</span>\n              </div>\n              <div className=\"timer__block\">\n                <span className=\"timer__time\">{('0' + timerSeconds).slice(-2)}</span>\n                <span className=\"timer__text\">Секунд</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <video autoPlay muted loop preload=\"auto\" className=\"full-screen-video\">\n        <source type=\"video/webm\" src={BackgroundWEBM} />\n        <source type=\"video/mp4\" src={BackgroundMP4} />\n      </video>\n    </>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './scss/index.scss';\n\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}